#!/bin/bash

# Function library for Flynn build scripts

# The Userdata script used to create a Flynn server
userscript() {
cat <<"SCRIPT"
#!/bin/bash

set -e 
service cron stop

apt_options="--option=Dpkg::Options::=--force-confold --option=Dpkg::options::=--force-unsafe-io --assume-yes --quiet"
flynn_script="https://dl.flynn.io/install-flynn"

apt-get ${apt_options} update
DEBIAN_FRONTEND=noninteractive apt-get ${apt_options} install --install-recommends language-pack-en linux-generic-lts-vivid
DEBIAN_FRONTEND=noninteractive apt-get ${apt_options} autoremove
DEBIAN_FRONTEND=noninteractive apt-get ${apt_options} dist-upgrade
curl -fsSL -o /tmp/install-flynn "${flynn_script}"
source /tmp/install-flynn
shutdown -P +1&
SCRIPT
}

# Get the latest official Ubuntu Trusy X86_64 image id
trusty_image() {
  brightbox -s images list -t official 2>/dev/null | awk '/ubuntu-trusty-14\.04-amd64-server[^-]/ {print $1}'
}

# Create the build image server
# Globals:
#   server_type: Brightbox server type to build
# Arguments:
#   image id of Official Ubuntu Trusty image
build_server() {
  local image=$1

  brightbox -s server create \
    --type="${server_type}" \
    --user-data="$(userscript)" \
    "${image}" 2>/dev/null| cut -f1
}

# Create servers in a group
# Globals:
#  server_type: Brightbox server type to build
#  cluster_name: Name of the Flynn Cluster
# Arguments:
#  image id: Image to build server from
#  user script: Cloud init instructions to pass to server
#  group list: list of server group to include the server in
#  num of servers: number of servers to create
build_servers() {
  local image=$1
  local user_script=$2
  local group_list=$3
  local num_of_servers=${4:-1}

  brightbox server create \
    --name="${cluster_name}" \
    --server-groups="${group_list}" \
    --server-count="${num_of_servers}" \
    --type="${server_type}" \
    --user-data="${user_script}" \
    "${image}" 
}


wait_for() {
  local server=$1
  local state=$2
  local status

  echo -n "Waiting for server ${server} to complete build"

  status=$(brightbox -s servers list ${server} 2>/dev/null | cut -f2)
  while [[ "${status}" != "${state}" ]]; do
    echo -n "."
    sleep 5
    status=$(brightbox -s servers list ${server} 2>/dev/null | cut -f2)
  done
  echo

}


